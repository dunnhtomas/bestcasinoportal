name: GitHub Copilot Agent Mode - Auto Test & Doc Generation

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  copilot-agent-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Install GitHub Copilot CLI
        run: gh extension install github/gh-copilot
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Tests with Copilot
        id: generate-tests
        run: |
          mkdir -p tests/generated
          gh copilot generate \
            --prompt "Generate comprehensive test suites for this Casino.ca Vue.js + Laravel project. Include unit tests for Vue components, API service tests, and integration tests. Focus on testing the services, components, and API endpoints." \
            --output tests/generated/ \
            --force
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Generate Documentation with Copilot
        id: generate-docs
        run: |
          mkdir -p docs/generated
          gh copilot generate \
            --prompt "Generate comprehensive documentation for this Casino.ca project including: API documentation, component documentation, deployment guide, development setup guide, and architecture overview." \
            --output docs/generated/ \
            --force
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Code Quality Analysis with Copilot
        id: code-analysis
        run: |
          gh copilot generate \
            --prompt "Analyze this Casino.ca codebase for: security vulnerabilities, performance issues, code quality problems, duplicate code, unused files, and technical debt. Generate a detailed report with actionable recommendations." \
            --output code-analysis-report.md \
            --force
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Run Generated Tests
        id: test-execution
        run: |
          if [ -d "tests/generated" ] && [ "$(ls -A tests/generated)" ]; then
            npm test
          else
            echo "No tests generated, skipping test execution"
          fi
        continue-on-error: true

      - name: Build Project
        run: |
          npm run build
        continue-on-error: true

      - name: Commit Generated Files
        id: commit-files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Copilot Agent"
          
          git add tests/generated/ docs/generated/ code-analysis-report.md
          
          if ! git diff --staged --quiet; then
            git commit -m "ü§ñ Auto-generated by GitHub Copilot Agent Mode
            
            - Generated comprehensive test suites
            - Created project documentation  
            - Performed code quality analysis
            
            Generated on: $(date)
            PR: #${{ github.event.number }}
            Commit: ${{ github.sha }}"
            
            git push origin HEAD:${{ github.head_ref }}
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR Comment with Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            let comment = `## ü§ñ GitHub Copilot Agent Mode Analysis
            
            **Automated analysis completed for PR #${{ github.event.number }}**
            
            ### Results:
            `;
            
            // Add test generation results
            if (fs.existsSync('tests/generated')) {
              const testFiles = fs.readdirSync('tests/generated');
              comment += `
              ‚úÖ **Tests Generated:** ${testFiles.length} test files created
              - Located in \`tests/generated/\`
              `;
            } else {
              comment += `
              ‚ö†Ô∏è **Tests:** Generation failed or no tests created
              `;
            }
            
            // Add documentation results
            if (fs.existsSync('docs/generated')) {
              const docFiles = fs.readdirSync('docs/generated');
              comment += `
              ‚úÖ **Documentation Generated:** ${docFiles.length} documentation files created
              - Located in \`docs/generated/\`
              `;
            } else {
              comment += `
              ‚ö†Ô∏è **Documentation:** Generation failed or no docs created
              `;
            }
            
            // Add code analysis results
            if (fs.existsSync('code-analysis-report.md')) {
              comment += `
              ‚úÖ **Code Analysis:** Report generated
              - See \`code-analysis-report.md\` for detailed findings
              `;
            } else {
              comment += `
              ‚ö†Ô∏è **Code Analysis:** Report generation failed
              `;
            }
            
            comment += `
            
            ### Next Steps:
            1. Review generated tests and documentation
            2. Address any issues found in the code analysis
            3. Run tests locally: \`npm test\`
            4. Build project: \`npm run build\`
            
            *This analysis was performed automatically by GitHub Copilot Agent Mode*
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload Analysis Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: copilot-analysis-${{ github.run_number }}
          path: |
            tests/generated/
            docs/generated/
            code-analysis-report.md
          retention-days: 30
